@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<Manager.Host.PermitView.TruckInfo>
@using Manager.Helpers
@{
    Layout = null;
}
<fieldset>
    <legend>Truck Information</legend>
    @Html.GroupItem(Model.GrossWeight, new GroupItemProperties("GrossWeight") { label = "Total Gross Weight", inputType = GroupItemProperties.InputType.NUMBER, range = new GroupItemProperties.Range() { min = 0 }, suffix = GroupItemProperties.Suffixes.POUNDS })
    @*@Html.GroupItem(Model.EmptyWeight, "EmptyWeight", "Empty Weight")*@
    @*@Html.GroupItem(Model.RegisteredWeight, "RegisteredWeight", "Registered Weight")*@
    @*@Html.GroupItem(Model.RegulationWeight, "RegulationWeight", "Regulation Weight")*@
    @Html.GroupItem(Model.DimensionSummary, new GroupItemProperties("DimensionSummary") { label = "Dimension Summary", readOnly = true })
    @Html.GroupItem(Model.DimensionDescription, new GroupItemProperties("DimensionDescription") { label = "Overall Dimension Description", readOnly = true })
    @Html.GroupItem(Model.Height, new GroupItemProperties("Height") { label = "Height", inputType = GroupItemProperties.InputType.NUMBER, range = new GroupItemProperties.Range() { min = 0 }, suffix = GroupItemProperties.Suffixes.FEET })
    @Html.GroupItem(Model.Width, new GroupItemProperties("Width") { label = "Width", inputType = GroupItemProperties.InputType.NUMBER, range = new GroupItemProperties.Range() { min = 0 }, suffix = GroupItemProperties.Suffixes.FEET })
    @Html.GroupItem(Model.Length, new GroupItemProperties("Length") { label = "Length", inputType = GroupItemProperties.InputType.NUMBER, range = new GroupItemProperties.Range() { min = 0 }, suffix = GroupItemProperties.Suffixes.FEET })
    @Html.GroupItem(Model.FrontOverhang, new GroupItemProperties("FrontOverhang") { label = "Front Overhang", inputType = GroupItemProperties.InputType.NUMBER, range = new GroupItemProperties.Range() { min = 0 }, suffix = GroupItemProperties.Suffixes.INCHES })
    @Html.GroupItem(Model.RearOverhang, new GroupItemProperties("RearOverhang") { label = "Rear Overhang", inputType = GroupItemProperties.InputType.NUMBER, range = new GroupItemProperties.Range() { min = 0 }, suffix = GroupItemProperties.Suffixes.INCHES })
    @Html.GroupItem(Model.LeftOverhang, new GroupItemProperties("LeftOverhang") { label = "Left Overhang", inputType = GroupItemProperties.InputType.NUMBER, range = new GroupItemProperties.Range() { min = 0 }, suffix = GroupItemProperties.Suffixes.INCHES })
    @Html.GroupItem(Model.RightOverhang, new GroupItemProperties("RightOverhang") { label = "Right Overhang", inputType = GroupItemProperties.InputType.NUMBER, range = new GroupItemProperties.Range() { min = 0 }, suffix = GroupItemProperties.Suffixes.INCHES })
    @Html.GroupItem(Model.Diagram, new GroupItemProperties("Diagram") { label = "Diagram", readOnly = true })

    @Html.GroupItem(Model.WeightPerAxle, new GroupItemProperties("WeightPerAxle") { label = "Weight Per Axle", inputType = GroupItemProperties.InputType.NUMBER, range = new GroupItemProperties.Range() { min = 0 }, suffix = GroupItemProperties.Suffixes.POUNDS })
    @Html.GroupItem(Model.AxleCount, new GroupItemProperties("AxleCount") { label = "Axle Count", inputType = GroupItemProperties.InputType.NUMBER, range = new GroupItemProperties.Range() { min = 0 } })
    @Html.GroupItem(Model.AxleLength, new GroupItemProperties("AxleLength") { label = "Axle Length (axle spacing)", inputType = GroupItemProperties.InputType.NUMBER, range = new GroupItemProperties.Range() { min = 0 }, suffix = GroupItemProperties.Suffixes.INCHES })
    @Html.GroupItem(Model.MaxAxleWidth, new GroupItemProperties("MaxAxleWidth") { label = "Max Axle Width", inputType = GroupItemProperties.InputType.NUMBER, range = new GroupItemProperties.Range() { min = 0 }, suffix = GroupItemProperties.Suffixes.INCHES })
    @Html.GroupItem(Model.MaxAxleWeight, new GroupItemProperties("MaxAxleWeight") { label = "Max Axle Weight", readOnly = true, suffix = GroupItemProperties.Suffixes.POUNDS })
    @Html.GroupItem(Model.TotalAxleWeight, new GroupItemProperties("TotalAxleWeight") { label = "Total Axle Weight", readOnly = true, suffix = GroupItemProperties.Suffixes.POUNDS })
    @Html.GroupItem(Model.AxleGroupTireType, new GroupItemProperties("AxleGroupTireType") { label = "Axle Group Tire Type" })
</fieldset>
