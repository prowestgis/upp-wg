@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<Manager.Host.PermitView>
@using Manager.Store
@using Manager.Helpers
@{
    Layout = null;
}
<!doctype html>
<html>
<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/png" href="/images/favicon.ico">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' name='viewport' />
    <meta name="viewport" content="width=device-width" />
    <title>UPP Prototype</title>

    <!-- Styling content -->
    <link href="css/bootstrap/bootstrap.min.css" rel="stylesheet" />

    <!-- Animation library for notifications   -->
    <link href="css/bootstrap/animate.min.css" rel="stylesheet" />

    <!--  Light Bootstrap Table core CSS    -->
    <link href="css/bootstrap/light-bootstrap-dashboard.css?v=1.4.0" rel="stylesheet" />

    <!--  CSS for Demo Purpose, don't include it in your project     -->
    <link href="css/app.css" rel="stylesheet" />

    <!--  Fonts and icons     -->
    <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">
    <link href='//fonts.googleapis.com/css?family=Roboto:400,700,300' rel='stylesheet' type='text/css'>
    <link href="css/bootstrap/pe-icon-7-stroke.css" rel="stylesheet" />

    <link rel="stylesheet" href="//js.arcgis.com/3.23/esri/css/esri.css">
</head>
<body>
    <div class="wrapper">
        <div class="sidebar" data-color="blue">
            <div class="sidebar-wrapper">
                <ul class="nav">
                    <li class="active">
                        <a href="dashboard.html">
                            <i class="pe-7s-graph"></i>
                            <p>Dashboard</p>
                        </a>
                    </li>
                    <li>
                        <a href="notifications.html">
                            <i class="pe-7s-bell"></i>
                            <p>Notifications</p>
                        </a>
                    </li>
                </ul>
            </div>
        </div>

        <div class="main-panel">
            <nav class="navbar navbar-default navbar-fixed">
                <div class="container-fluid">
                    <div class="navbar-header">
                        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navigation-example-2">
                            <span class="sr-only">Toggle navigation</span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>
                        <a class="navbar-brand" href="#">Permit</a>
                    </div>
                    <div class="collapse navbar-collapse">
                        <ul class="nav navbar-nav navbar-right">
                            @if (Model.User != null && Model.User.IsAuthenticated)
                            {
                                <li>
                                    <a href="/authentication/logout">Log out</a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </nav>

            <div class="content">
                <div class="container-fluid">
                    <form id="permit-form" class="form-horizontal">
                        @Html.Partial("Permit/Hauler", Model.Hauler)
                        @Html.Partial("Permit/Company", Model.Company)
                        @Html.Partial("Permit/Insurance", Model.Insurance)
                        @Html.Partial("Permit/Vehicle", Model.Vehicle)
                        @Html.Partial("Permit/Truck", Model.Truck)
                        @Html.Partial("Permit/Axle", Model.Axle)
                        @Html.Partial("Permit/Trailer", Model.Trailer)
                        @Html.Partial("Permit/Load", Model.Load)
                        @Html.Partial("Permit/Movement", Model.Movement)
                        <button type="submit"></button>
                    </form>
                </div>
            </div>

            <footer class="footer">
                <div class="container-fluid">
                    <p class="copyright pull-right">
                        &copy;
                        <script>document.write(new Date().getFullYear())</script>
                    </p>
                </div>
            </footer>
        </div>
    </div>

    <div class="modal fade" tabindex="-1" role="dialog" id="startLocationModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Location Selection</h4>
                </div>
                <div class="modal-body">
                    <div id="start-map"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" tabindex="-1" role="dialog" id="endLocationModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Location Selection</h4>
                </div>
                <div class="modal-body">
                    <div id="end-map"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <script src="js/jquery.3.2.1.min.js"></script>
    <script src="js/bootstrap/bootstrap.min.js"></script>
    <script src="//js.arcgis.com/3.23/"></script>
    <script>
      var start_map, end_map, route_map;

      require([
          "esri/map",
          "esri/tasks/locator",
          "esri/tasks/RouteTask",
          "esri/tasks/RouteParameters",
          "esri/tasks/FeatureSet",
          "esri/geometry/webMercatorUtils",
          "esri/symbols/SimpleMarkerSymbol",
          "esri/symbols/SimpleLineSymbol",
          "esri/graphic",
          "dojo/_base/array",
          "dojo/on",
          "dojo/domReady!"
      ], function (Map, Locator, RouteTask, RouteParameters, FeatureSet, webMercatorUtils, SimpleMarkerSymbol, SimpleLineSymbol, Graphic, array, on) {
          var symbol = new SimpleMarkerSymbol({
              "color": [255, 255, 255, 64],
              "size": 12,
              "angle": 0,
              "xoffset": 0,
              "yoffset": 0,
              "type": "esriSMS",
              "style": "esriSMSCircle",
              "outline": {
                  "color": [0, 0, 0, 255],
                  "width": 1,
                  "type": "esriSLS",
                  "style": "esriSLSSolid"
              }
          });

          var locator = new Locator("https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer");

          function init_map(map_id, map_ref) {
              if (!map_ref) {
                  map_ref = new Map(map_id, {
                      basemap: "topo",
                      center: [-122.45, 37.75],
                      zoom: 13
                  });

                  on(map_ref, 'click', function (evt) {
                      map_ref.graphics.clear();
                      map_ref.graphics.add(new Graphic(evt.mapPoint, symbol));
                  });
              }

              return map_ref;
          };

          function find_address(map, el) {
              var point = map.graphics.graphics[0].geometry;
              webPoint = webMercatorUtils.webMercatorToGeographic(point);

              locator.locationToAddress(webPoint, 100).then(function (result) {
                  $(el).val(result.address.Match_addr);
                  $(el).data('location', point);

                  check_route();
              });
          };

          // If both origin and destination have locations, route it
          function check_route() {
              var origin_pt = $('#movementinfo-origin').data('location');
              var destination_pt = $('#movementinfo-destination').data('location');

              if (origin_pt && destination_pt) {

                  // Ask UPP what service we should use for routing.  The UPP services API is responsible for acquiring any
                  // OAuth tokens that are needed for the service
                  var url = "/api/hauler";
                  $.get(url, function (data) {
                      if (!data.routeUrl && data.routeToken) {
                          alert('No route service access is configured');
                          return;
                      }

                      var routeTask = new RouteTask(data.routeUrl + "?token=" + data.routeToken);
                      var routeParams = new RouteParameters();
                      routeParams.stops = new FeatureSet();
                      routeParams.stops.features.push(new Graphic(origin_pt, null, {}));
                      routeParams.stops.features.push(new Graphic(destination_pt, null, {}));
                      routeTask.solve(routeParams).then(function (result) {
                          // Show the route on the route map
                          var routeSymbol = new SimpleLineSymbol().setColor(new dojo.Color([0, 0, 255, 0.5])).setWidth(5);
                          array.forEach(result.routeResults, function (result) {
                              route_map.graphics.add(result.route.setSymbol(routeSymbol));
                              route_map.setExtent(result.route.geometry.getExtent().expand(1.5));
                          });
                      });

                  });
              }
          };

          $('#startLocationModal').on('shown.bs.modal', function () {
              start_map = init_map('start-map', start_map);
          });

          $('#startLocationModal').on('hidden.bs.modal', function () {
              find_address(start_map, '#movementinfo-origin');
          });

          $('#endLocationModal').on('shown.bs.modal', function () {
              end_map = init_map('end-map', end_map);
          });

          $('#endLocationModal').on('hidden.bs.modal', function () {
              find_address(end_map, '#movementinfo-destination');
          });

          route_map = new Map('route-map', {
              basemap: "topo",
              center: [-122.45, 37.75],
              zoom: 12
          });
      });
    </script>

    <!-- Populate the company information -->
    <script type="text/javascript">
        // Ask the service locator to give us a UPP host that can provide company information.
        var serviceLocator = "/api/v1/hosts?type=upp&scope=information.company";
        var select = $("#company-selector");

        $.get(url, function (data) {
            // Results are returned in priority order, so just take the first one.  Throw an error if no services are available
            if (data.length === 0) {
                alert('The service locator did not return any UPP services for company information');
                return;
            }

            // Got at least one provider, so use them to populate the company information drop-down
            var service = data[0];
            $.get(service.url, function (companies) {
                $.each(companies, function (index, company) {
                    var opt = $('<option>' + company.companyName + '</option>');
                    opt.data("company", company);

                    select.append(opt);
                });
            });
        });

        /*
        // Call an API to get the company information for a logged in user
        //  -- Same Domain for development...
        var url = "/api/ext/company";
        $.get(url, function (data) {        
            $.each(data, function (index, company) {
                var opt = $('<option>' + company.companyName + '</option>');
                opt.data("company", company);

                select.append(opt);
            });
        });
        */

        // Set an event handler to populate the company form on select change
        select.change(function (evt) {
            var opt = select.find(":selected");
            var data = opt.data("company");
            if (data) {
                $('#companyinfo-name').val(data.companyName);
                $('#companyinfo-email').val(data.email);
                $('#companyinfo-contact').val(data.contact);
                $('#companyinfo-phone').val(data.phone);
                $('#companyinfo-fax').val(data.fax);
                $('#companyinfo-cell').val(data.cell);
                $('#companyinfo-bill-to').val(data.billTo);
                $('#companyinfo-billing-address').val(data.billingAddress);
            }
        });
    </script>
</body>
</html>